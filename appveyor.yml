#---------------------------------#
#    environment configuration    #
#---------------------------------#
# scripts that are called at very beginning, before repo cloning
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090

  matrix:
  - SAMBADA_TEST_TYPE: SMOKE

  - SAMBADA_TEST_TYPE: INTEGRATION

#---------------------------------#
#       build configuration       #
#---------------------------------#
# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: windows

build_script:
  - ps: |
      $SAMBADA_VERSION = "0.8.0alpha4"
      $SAMBADA_OS_NAME = $env:PLATFORM
      echo "${SAMBADA_VERSION} ${SAMBADA_OS_NAME}"
      $PACKAGE_NAME = "sambada-${SAMBADA_VERSION}-${SAMBADA_OS_NAME}"
      echo $PACKAGE_NAME
      $PACKAGE_URL = "https://github.com/Sylvie/sambada/releases/download/v${SAMBADA_VERSION}/${PACKAGE_NAME}.zip"
      curl $PACKAGE_URL -o "$PACKAGE_NAME.zip"
      unzip "${PACKAGE_NAME}.zip" -d "${PACKAGE_NAME}"
      if (${SAMBADA_TEST_TYPE} == "SMOKE")
      {
        cd ${PACKAGE_NAME}\examples\subset-cattle-SNP
        ..\..\binaries\sambada.exe param-cattle.txt cattle-env.csv cattle-mark.txt
        head  cattle-mark-Out-1.txt
      }
      else
      {
        echo "Integration tests not available yet."
      }

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
#on_success:
#- do something

# on build failure
#on_failure:
#- do something

# after build failure or success
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
