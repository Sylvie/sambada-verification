#---------------------------------#
#    environment configuration    #
#---------------------------------#
# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

environment:
  matrix:
  - SAMBADA_TEST_TYPE: INTEGRATION

  - SAMBADA_TEST_TYPE: SMOKE

#---------------------------------#
#       build configuration       #
#---------------------------------#
# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: windows

build_script:
  - ps: |
      $SAMBADA_VERSION = "0.8.0beta0"
      $SAMBADA_OS_NAME = $env:PLATFORM
      echo "${SAMBADA_VERSION} ${SAMBADA_OS_NAME}"
      $PACKAGE_NAME = "sambada-${SAMBADA_VERSION}-${SAMBADA_OS_NAME}"
      echo $PACKAGE_NAME
      $PACKAGE_URL = "https://github.com/Sylvie/sambada/releases/download/v${SAMBADA_VERSION}/${PACKAGE_NAME}.zip"
      curl $PACKAGE_URL -o "$PACKAGE_NAME.zip"
      unzip "${PACKAGE_NAME}.zip" -d "${PACKAGE_NAME}"
      echo "Sambada test type: ${env:SAMBADA_TEST_TYPE}"
      if (${env:SAMBADA_TEST_TYPE} -eq "SMOKE")
      {
        cd ${PACKAGE_NAME}\examples\subset-cattle-SNP
        $timer = [Diagnostics.Stopwatch]::StartNew()
        ..\..\binaries\sambada.exe param-cattle.txt cattle-env.csv cattle-mark.txt
        $timer.Stop()
        $timer.Elapsed
        head  cattle-mark-Out-1.txt
      }
      else
      {
        ${env:PATH} = "C:\msys64\usr\bin;C:\msys64\mingw64\bin;${env:PATH};C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64;C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\x86_64-w64-mingw32;"
        $ARCHIVE_NAME = "sambada-${SAMBADA_VERSION}"
        $ARCHIVE_URL = "https://github.com/Sylvie/sambada/archive/v${SAMBADA_VERSION}.zip"
        curl $ARCHIVE_URL -o "$ARCHIVE_NAME.zip"
        unzip "${ARCHIVE_NAME}.zip" -d "${ARCHIVE_NAME}"
        mkdir ${ARCHIVE_NAME}/${ARCHIVE_NAME}/build/
        cd ${ARCHIVE_NAME}/${ARCHIVE_NAME}/
        echo "Regenerating the configuration files"
        bash -c "autoreconf -i"
        cd build/
        bash -c "../configure sambadahostsystemname=%PLATFORM% --host=x86_64-w64-mingw32 --disable-manual"
        echo "Building test/integration/SambadaIntegrationTests.exe ..."
        make test/integration/SambadaIntegrationTests.exe
        echo "Listing build folder:"
        ls .
        echo "Making link:"
        New-Item -Path binaries -ItemType SymbolicLink -Value ../../../${PACKAGE_NAME}/binaries/
        echo "Running tests ..."
        $timer = [Diagnostics.Stopwatch]::StartNew()
        test/integration/SambadaIntegrationTests.exe
        $timer.Stop()
        $timer.Elapsed
      }

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
#on_success:
#- do something

# on build failure
#on_failure:
#- do something

# after build failure or success
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
